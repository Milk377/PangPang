// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class PlayerTable
{
	public class Row
	{
		public string Level;
		public string MaxExp;
		public string MissileCount;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.Level = grid[i][0];
			row.MaxExp = grid[i][1];
			row.MissileCount = grid[i][2];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_Level(string find)
	{
		return rowList.Find(x => x.Level == find);
	}
	public List<Row> FindAll_Level(string find)
	{
		return rowList.FindAll(x => x.Level == find);
	}
	public Row Find_MaxExp(string find)
	{
		return rowList.Find(x => x.MaxExp == find);
	}
	public List<Row> FindAll_MaxExp(string find)
	{
		return rowList.FindAll(x => x.MaxExp == find);
	}
	public Row Find_MissileCount(string find)
	{
		return rowList.Find(x => x.MissileCount == find);
	}
	public List<Row> FindAll_MissileCount(string find)
	{
		return rowList.FindAll(x => x.MissileCount == find);
	}

}